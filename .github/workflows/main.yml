# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch git history
        run: |
          git fetch --prune --unshallow
      - name: Parse tags
        shell: bash
        id: tags
        run: |
          git fetch --tags -f
          current_tag=$(git describe --tags --abbrev=0)
          previous_tag=$(echo $(git tag -l | sort -V --reverse | sed -n 2p) | sed 's/^$/HEAD/')
          echo "::set-output name=current_tag::$current_tag"
          echo "::set-output name=previous_tag::$previous_tag"
      - name: Create changelog
        shell: bash
        id: changelog
        run: |
          printf "version tag:%s\n" "${{ steps.tags.outputs.current_tag }}...${{ steps.tags.outputs.previous_tag }}"
          changelog=$(git log --first-parent --pretty=format:"- [%h](https://github.com/${{ github.repository }}/commit/%H) - %d %s: %b (%cr) (%an)" ${{ steps.tags.outputs.current_tag }}...${{ steps.tags.outputs.previous_tag }})
          printf "changelog:%s\n" "${changelog}"
          changelog="${changelog//'%'/'%25'}"
          printf "changelog:%s\n" "${changelog}"
          changelog="${changelog//$'\n'/'%0A'}"
          printf "changelog:%s\n" "${changelog}"
          changelog="${changelog//$'\r'/'%0D'}"
          printf "changelog:%s\n" "${changelog}"
          echo "::set-output name=changelog::$changelog"
      - name: Create Changelog file
        id: changelog-file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout master
          tag_version=$(echo "${{ github.ref }}" | sed -e "s/refs\/tags\///g")
          echo -e "# [Release $tag_version](https://github.com/${{ github.repository }}/releases/tag/$tag_version)\n${{ steps.changelog.outputs.changelog }}\n$(cat CHANGELOG.md)" > CHANGELOG.md
          git config --local user.email "prateek.jain@milvik.se"
          git config --local user.name "Prateek Jain"
          curl -i -H "Authorization: token 8aeb48335201c0d2fcce7d09c86a15b2c2c3abd9" -X DELETE https://api.github.com/repos/${{ github.repository }}/branches/master/protection
          git add CHANGELOG.md && git commit -m 'Updated CHANGELOG.md' && git push origin master && echo ::set-env name=push::1 || echo "No changes to CHANGELOG.md"
          curl -i -H "Authorization: token 8aeb48335201c0d2fcce7d09c86a15b2c2c3abd9" -H "Content-Type: application/json" -H "Accept: application/vnd.github.luke-cage-preview+json" -X PUT -d '{"required_status_checks": null, "enforce_admins": false, "required_pull_request_reviews": {"dismiss_stale_reviews": false, "require_code_owner_reviews": true, "required_approving_review_count": 1}, "restrictions": null}' https://api.github.com/repos/${{ github.repository }}/branches/master/protection
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
