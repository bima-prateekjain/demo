on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set release tag
        run: |
          export CURRENT_TAG="$(git describe --tags --abbrev=0)"
          export LAST_TAG="$(echo $(git tag -l | sort -V --reverse | sed -n 2p) | sed 's/^$/HEAD/')"
          export CHANGELOG_FROM="$(if [ "$LAST_TAG" = "HEAD" ]; then echo "$LAST_TAG..HEAD"; else echo "$CURRENT_TAG...$LAST_TAG"; fi;)"
      - name: Set changelog
        run: echo ::set-env name=commitmsg::$(git log --pretty="%h - %s (%an)" $CHANGELOG_FROM)
        # (Escape newlines see https://github.com/actions/create-release/issues/25)
        # run: |
        #   text="$(git --no-pager log $CHANGELOG_FROM --pretty=format:'%h - %s (%an)')"
        #   text="$(echo $text | sed 's/^/- /; s/$//')"
        #   echo "::set-env name=CHANGELOG::$text"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            ${{ env.commitmsg }}
          draft: false
          prerelease: false
      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0
      # - name: Find next version
      #   id: version
      #   uses: ./
      # - name: Create Changelog
      #   id: changelog
      #   run: |
      #     git log ${{ steps.version.outputs.last }}..${{ github.sha }} --pretty=oneline > ${{ runner.temp }}/CHANGELOG.md
      # - name: Create a release
      #   #uses: actions/create-release@v1
      #   # NOTE workaround, since actions/create-release@v1 does not support "commitish" parameter, see https://github.com/actions/create-release/pull/32
      #   uses: actions/github-script@v2
      #   with:
      #     #tag_name: ${{ steps.next_version.outputs.result }}
      #     #release_name: ${{ steps.next_version.outputs.result }}
      #     #commitish: ${{ github.sha }}
      #     #body: |
      #     #  ## Changelog
      #     #  ${{ steps.changelog.outputs.result }}
      #     script: |
      #       const fs = require("fs");
      #       const util = require("util");
      #       const readFile = util.promisify(fs.readFile);
      #       const changelog = await readFile("${{ runner.temp }}/CHANGELOG.md", "utf8");
      #       await github.repos.createRelease({
      #         ...context.repo,
      #         name: "${{ steps.version.outputs.next }}",
      #         tag_name: "${{ steps.version.outputs.next }}",
      #         body: "## Changelog\n" + changelog,
      #         target_commitish: context.sha,
      #       });
