# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare release description
        id: prepare_changelog
        shell: bash
        run: |
          CURR_TAG="$(git describe --tags --abbrev=0)"
          PREV_TAG="$(echo $(git tag -l | sort -V --reverse | sed -n 2p) | sed 's/^$/HEAD/')"
          CHANGELOG_FROM="$(if [ "$PREV_TAG" = "HEAD" ]; then echo "$PREV_TAG..HEAD"; else echo "$CURR_TAG...$PREV_TAG"; fi;)"
          DESCRIPTION="$(git log --pretty="%h - %s (%an)" $CHANGELOG_FROM)"
          printf 'DESCRIPTION:\n%s\n' "${DESCRIPTION}"
          # See https://github.community/t5/GitHub-Actions/set-output-Truncates-Multiline-Strings/td-p/37870
          DESCRIPTION="${DESCRIPTION//'%'/'%25'}"
          DESCRIPTION="${DESCRIPTION//$'\n'/'%0A'}"
          DESCRIPTION="${DESCRIPTION//$'\r'/'%0D'}"
          printf '::set-output name=DESCRIPTION::%s' "${DESCRIPTION}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "${{ steps.prepare_changelog.outputs.DESCRIPTION }}"
          draft: false
          prerelease: false